Get cluster infos
kubectl cluster-info

Get pods:
kubectl get pods

Create Pod:
kubectl create -f <file_name.yaml>

Delete Pod:
kubectl delete pod <pod_name>

Create Replication Controller:
kubectl create -f <rc_file_name.yaml>

Consultar Replication Controller:
kubectl get <rc_name>

Create Replica Set:
kubectl create -f <rs_file_name.yaml>

Consultar Replica Set:
kubectl get replicaset

#Escalar
Dando replace no RS:
kubectl replace -f rs.yaml

#Escalar
Alterar apenas o parametro "replicas"
kubectl scale --replicas=6 -f rs.yaml

#Escalar
Alaterar apenas o parametro replcias buscando por tipo de node e nome do objeto declarado
kubectl scale --replicas=8 replicaset aplicacao-rs

Descrever o replicaset:
kubectl describe replicaset <replicaset_name>

#Deployment
Run Deployment:
kubectl create -f <deployment_file.yaml>

#Deployment
Delete deployment:
kubectl delete deployment frontend-dp

#Deployment
Visualizar os deployments:
kubectl get deployment

#Deployment
Pagar as informações sobre o deployment:
kubectl get all

#Deployment
Descrever as informações do deployment
kubectl describe deployment <deployment_name>

#Deployment
Aulizar o deployment
kubectl apply -f deployment/<deployment_file>.yaml

#Scale up and Scale down
Alterar o num de replicas em runtime
kubectl scale deployment/<deployment_name> --replicas=<number_of_replicas>

#Network
Buscar os namespaces existentes:
kubectl get namespaces || kubectl get ns

#Pods
Buscar pods por namespace:
kubectl get pods -n <namespace>

#Network/namespace
Criar namespaces:
kubectl create namespace frontend --save-config
or
kubectl create -f <namespace_file_name.yaml>

#Kubernetes Pod
Entrar no pod kubernetes:
kubectl exec -it <pod-name> -- bash